{"ast":null,"code":"var _jsxFileName = \"/home/jrojas/django/django-todo-react/frontend/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n\n      if (e.target.type === \"checkbox\") {\n        value = e.target.cheched;\n      }\n\n      const activeItem = { ...this.state.activeItem,\n        [name]: value\n      };\n      this.setState({\n        activeItem\n      });\n    };\n\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n\n  render() {\n    const {\n      toggle,\n      onSave\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toogle: toggle,\n        children: \"To-Do Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"todo-title\",\n              children: \"Titulo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"todo-title\",\n              name: \"title\",\n              value: this.state.activeItem.title,\n              onChange: this.handleChange,\n              placeholder: \"Titulo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"todo-description\",\n              children: \"Descripci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"todo-description\",\n              name: \"description\",\n              value: this.state.activeItem.description,\n              onChange: this.handleChange,\n              placeholder: \"Descripci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            check: true,\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              check: true,\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"checkbox\",\n                name: \"completed\",\n                checked: this.state.activeItem.completed,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this), \"Completado\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          onClick: () => onSave(this.state.activeItem),\n          children: \"Guardar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/jrojas/django/django-todo-react/frontend/src/components/Modal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CustomModal","constructor","props","handleChange","e","name","value","target","type","cheched","activeItem","state","setState","render","toggle","onSave","title","description","completed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Input,\n    Label\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: this.props.activeItem,\n        };\n    }\n\n    handleChange = (e) => {\n        let { name, value } = e.target;\n\n        if (e.target.type === \"checkbox\") {\n            value = e.target.cheched;\n        }\n\n        const activeItem = { ...this.state.activeItem, [name]: value};\n\n        this.setState({ activeItem });\n    };\n\n    render() {\n        const {toggle, onSave } = this.props;\n\n        return (\n            <Modal isOpen={true} toggle={toggle}>\n                <ModalHeader toogle={toggle}>To-Do Item</ModalHeader>\n                <ModalBody>\n                    <form>\n                        <FormGroup>\n                            <Label for=\"todo-title\">Titulo</Label>\n                            <Input\n                                type=\"text\"\n                                id=\"todo-title\"\n                                name=\"title\"\n                                value={this.state.activeItem.title}\n                                onChange={this.handleChange}\n                                placeholder=\"Titulo\" \n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"todo-description\">Descripción</Label>\n                            <Input\n                                type=\"text\"\n                                id=\"todo-description\"\n                                name=\"description\"\n                                value={this.state.activeItem.description}\n                                onChange={this.handleChange}\n                                placeholder=\"Descripción\"\n                            />\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input \n                                    type=\"checkbox\"\n                                    name=\"completed\"\n                                    checked={this.state.activeItem.completed}\n                                    onChange={this.handleChange}\n                                />\n                                Completado\n                            </Label>\n                        </FormGroup>\n                    </form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button\n                        color=\"success\"\n                        onClick={() => onSave(this.state.activeItem)}\n                    >\n                        Guardar\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}